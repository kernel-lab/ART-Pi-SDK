##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.3.0-B58] date: [Fri May 03 01:41:26 CST 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = ART_Pi-Kernel


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build


######################################
# source
######################################
# C sources
C_SOURCES =  \
kernel/app_proc/Src/main.c \
kernel/app_proc/Src/gpio.c \
kernel/app_proc/Src/usart.c \
kernel/app_proc/Src/stm32h7xx_it.c \
kernel/app_proc/Src/stm32h7xx_hal_msp.c \
kernel/app_proc/Src/stm32h7xx_hal_timebase_tim.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
platform/hal/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
kernel/app_proc/Src/system_stm32h7xx.c \
kernel/threadx/common/src/tx_initialize_high_level.c \
kernel/threadx/common/src/tx_initialize_kernel_enter.c \
kernel/threadx/common/src/tx_initialize_kernel_setup.c \
kernel/threadx/common/src/tx_block_allocate.c \
kernel/threadx/common/src/tx_block_pool_cleanup.c \
kernel/threadx/common/src/tx_block_pool_create.c \
kernel/threadx/common/src/tx_block_pool_delete.c \
kernel/threadx/common/src/tx_block_pool_info_get.c \
kernel/threadx/common/src/tx_block_pool_initialize.c \
kernel/threadx/common/src/tx_block_pool_prioritize.c \
kernel/threadx/common/src/tx_block_release.c \
kernel/threadx/common/src/tx_byte_allocate.c \
kernel/threadx/common/src/tx_byte_pool_cleanup.c \
kernel/threadx/common/src/tx_byte_pool_create.c \
kernel/threadx/common/src/tx_byte_pool_delete.c \
kernel/threadx/common/src/tx_byte_pool_info_get.c \
kernel/threadx/common/src/tx_byte_pool_initialize.c \
kernel/threadx/common/src/tx_byte_pool_prioritize.c \
kernel/threadx/common/src/tx_byte_pool_search.c \
kernel/threadx/common/src/tx_byte_release.c \
kernel/threadx/common/src/tx_event_flags_cleanup.c \
kernel/threadx/common/src/tx_event_flags_create.c \
kernel/threadx/common/src/tx_event_flags_delete.c \
kernel/threadx/common/src/tx_event_flags_get.c \
kernel/threadx/common/src/tx_event_flags_info_get.c \
kernel/threadx/common/src/tx_event_flags_initialize.c \
kernel/threadx/common/src/tx_event_flags_set.c \
kernel/threadx/common/src/tx_event_flags_set_notify.c \
kernel/threadx/common/src/tx_mutex_cleanup.c \
kernel/threadx/common/src/tx_mutex_create.c \
kernel/threadx/common/src/tx_mutex_delete.c \
kernel/threadx/common/src/tx_mutex_get.c \
kernel/threadx/common/src/tx_mutex_info_get.c \
kernel/threadx/common/src/tx_mutex_initialize.c \
kernel/threadx/common/src/tx_mutex_prioritize.c \
kernel/threadx/common/src/tx_mutex_priority_change.c \
kernel/threadx/common/src/tx_mutex_put.c \
kernel/threadx/common/src/tx_queue_cleanup.c \
kernel/threadx/common/src/tx_queue_create.c \
kernel/threadx/common/src/tx_queue_delete.c \
kernel/threadx/common/src/tx_queue_flush.c \
kernel/threadx/common/src/tx_queue_front_send.c \
kernel/threadx/common/src/tx_queue_info_get.c \
kernel/threadx/common/src/tx_queue_initialize.c \
kernel/threadx/common/src/tx_queue_prioritize.c \
kernel/threadx/common/src/tx_queue_receive.c \
kernel/threadx/common/src/tx_queue_send.c \
kernel/threadx/common/src/tx_queue_send_notify.c \
kernel/threadx/common/src/tx_semaphore_ceiling_put.c \
kernel/threadx/common/src/tx_semaphore_cleanup.c \
kernel/threadx/common/src/tx_semaphore_create.c \
kernel/threadx/common/src/tx_semaphore_delete.c \
kernel/threadx/common/src/tx_semaphore_get.c \
kernel/threadx/common/src/tx_semaphore_info_get.c \
kernel/threadx/common/src/tx_semaphore_initialize.c \
kernel/threadx/common/src/tx_semaphore_prioritize.c \
kernel/threadx/common/src/tx_semaphore_put.c \
kernel/threadx/common/src/tx_semaphore_put_notify.c \
kernel/threadx/common/src/tx_thread_create.c \
kernel/threadx/common/src/tx_thread_delete.c \
kernel/threadx/common/src/tx_thread_entry_exit_notify.c \
kernel/threadx/common/src/tx_thread_identify.c \
kernel/threadx/common/src/tx_thread_info_get.c \
kernel/threadx/common/src/tx_thread_initialize.c \
kernel/threadx/common/src/tx_thread_preemption_change.c \
kernel/threadx/common/src/tx_thread_priority_change.c \
kernel/threadx/common/src/tx_thread_relinquish.c \
kernel/threadx/common/src/tx_thread_reset.c \
kernel/threadx/common/src/tx_thread_resume.c \
kernel/threadx/common/src/tx_thread_shell_entry.c \
kernel/threadx/common/src/tx_thread_sleep.c \
kernel/threadx/common/src/tx_thread_stack_analyze.c \
kernel/threadx/common/src/tx_thread_stack_error_handler.c \
kernel/threadx/common/src/tx_thread_stack_error_notify.c \
kernel/threadx/common/src/tx_thread_suspend.c \
kernel/threadx/common/src/tx_thread_system_preempt_check.c \
kernel/threadx/common/src/tx_thread_system_resume.c \
kernel/threadx/common/src/tx_thread_system_suspend.c \
kernel/threadx/common/src/tx_thread_terminate.c \
kernel/threadx/common/src/tx_thread_time_slice.c \
kernel/threadx/common/src/tx_thread_time_slice_change.c \
kernel/threadx/common/src/tx_thread_timeout.c \
kernel/threadx/common/src/tx_thread_wait_abort.c \
kernel/threadx/common/src/tx_time_get.c \
kernel/threadx/common/src/tx_time_set.c \
kernel/threadx/common/src/txe_block_allocate.c \
kernel/threadx/common/src/txe_block_pool_create.c \
kernel/threadx/common/src/txe_block_pool_delete.c \
kernel/threadx/common/src/txe_block_pool_info_get.c \
kernel/threadx/common/src/txe_block_pool_prioritize.c \
kernel/threadx/common/src/txe_block_release.c \
kernel/threadx/common/src/txe_byte_allocate.c \
kernel/threadx/common/src/txe_byte_pool_create.c \
kernel/threadx/common/src/txe_byte_pool_delete.c \
kernel/threadx/common/src/txe_byte_pool_info_get.c \
kernel/threadx/common/src/txe_byte_pool_prioritize.c \
kernel/threadx/common/src/txe_byte_release.c \
kernel/threadx/common/src/txe_event_flags_create.c \
kernel/threadx/common/src/txe_event_flags_delete.c \
kernel/threadx/common/src/txe_event_flags_get.c \
kernel/threadx/common/src/txe_event_flags_info_get.c \
kernel/threadx/common/src/txe_event_flags_set.c \
kernel/threadx/common/src/txe_event_flags_set_notify.c \
kernel/threadx/common/src/txe_mutex_create.c \
kernel/threadx/common/src/txe_mutex_delete.c \
kernel/threadx/common/src/txe_mutex_get.c \
kernel/threadx/common/src/txe_mutex_info_get.c \
kernel/threadx/common/src/txe_mutex_prioritize.c \
kernel/threadx/common/src/txe_mutex_put.c \
kernel/threadx/common/src/txe_queue_create.c \
kernel/threadx/common/src/txe_queue_delete.c \
kernel/threadx/common/src/txe_queue_flush.c \
kernel/threadx/common/src/txe_queue_front_send.c \
kernel/threadx/common/src/txe_queue_info_get.c \
kernel/threadx/common/src/txe_queue_prioritize.c \
kernel/threadx/common/src/txe_queue_receive.c \
kernel/threadx/common/src/txe_queue_send.c \
kernel/threadx/common/src/txe_queue_send_notify.c \
kernel/threadx/common/src/txe_semaphore_ceiling_put.c \
kernel/threadx/common/src/txe_semaphore_create.c \
kernel/threadx/common/src/txe_semaphore_delete.c \
kernel/threadx/common/src/txe_semaphore_get.c \
kernel/threadx/common/src/txe_semaphore_info_get.c \
kernel/threadx/common/src/txe_semaphore_prioritize.c \
kernel/threadx/common/src/txe_semaphore_put.c \
kernel/threadx/common/src/txe_semaphore_put_notify.c \
kernel/threadx/common/src/txe_thread_create.c \
kernel/threadx/common/src/txe_thread_delete.c \
kernel/threadx/common/src/txe_thread_entry_exit_notify.c \
kernel/threadx/common/src/txe_thread_info_get.c \
kernel/threadx/common/src/txe_thread_preemption_change.c \
kernel/threadx/common/src/txe_thread_priority_change.c \
kernel/threadx/common/src/txe_thread_relinquish.c \
kernel/threadx/common/src/txe_thread_reset.c \
kernel/threadx/common/src/txe_thread_resume.c \
kernel/threadx/common/src/txe_thread_suspend.c \
kernel/threadx/common/src/txe_thread_terminate.c \
kernel/threadx/common/src/txe_thread_time_slice_change.c \
kernel/threadx/common/src/txe_thread_wait_abort.c \
kernel/threadx/common/src/tx_timer_activate.c \
kernel/threadx/common/src/tx_timer_change.c \
kernel/threadx/common/src/tx_timer_create.c \
kernel/threadx/common/src/tx_timer_deactivate.c \
kernel/threadx/common/src/tx_timer_delete.c \
kernel/threadx/common/src/tx_timer_expiration_process.c \
kernel/threadx/common/src/tx_timer_info_get.c \
kernel/threadx/common/src/tx_timer_initialize.c \
kernel/threadx/common/src/tx_timer_system_activate.c \
kernel/threadx/common/src/tx_timer_system_deactivate.c \
kernel/threadx/common/src/tx_timer_thread_entry.c \
kernel/threadx/common/src/txe_timer_activate.c \
kernel/threadx/common/src/txe_timer_change.c \
kernel/threadx/common/src/txe_timer_create.c \
kernel/threadx/common/src/txe_timer_deactivate.c \
kernel/threadx/common/src/txe_timer_delete.c \
kernel/threadx/common/src/txe_timer_info_get.c \
kernel/app_proc/Src/sysmem.c \
kernel/app_proc/Src/syscalls.c \
applications/app_threadx.c \
applications/app_azure_rtos.c


# ASM sources
ASM_SOURCES =  \
kernel/startup_stm32h750xx.s


# ASM sources
ASMM_SOURCES =  \
kernel/app_proc/Src/tx_initialize_low_level.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_context_restore.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_context_save.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_interrupt_control.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_interrupt_disable.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_interrupt_restore.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_schedule.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_stack_build.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_thread_system_return.S \
kernel/threadx/ports/cortex_m7/gnu/src/tx_timer_interrupt.S


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DTX_INCLUDE_USER_DEFINE_FILE \
-DUSE_HAL_DRIVER \
-DSTM32H750xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-Ikernel/app_proc/Inc \
-Iplatform/hal/STM32H7xx_HAL_Driver/Inc \
-Iplatform/hal/STM32H7xx_HAL_Driver/Inc/Legacy \
-Iplatform/hal/CMSIS/Device/ST/STM32H7xx/Include \
-Iplatform/hal/CMSIS/Include \
-Ikernel/threadx/common/inc/ \
-Ikernel/threadx/ports/cortex_m7/gnu/inc/ \
-Iapplications


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = kernel/STM32H750XBHx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# debug printf
print-c-sources:  
	@echo "C_SOURCES = $(C_SOURCES)" 

print-include:
	@echo "C_INCLUDES = $(C_INCLUDES)" 

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***